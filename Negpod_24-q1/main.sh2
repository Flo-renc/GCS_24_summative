#!/bin/bash

# Function to validate email format
validate_email_format() {
    # Regular expression to match email format "[first name initial][last name in full]@alustudent.com"
    regex="^[a-z]\.[a-z]+@alustudent\.com$"
    if [[ $1 =~ $regex ]]; then
        return 0  # Email format is valid
    else
        return 1  # Email format is invalid
    fi
}

# Function to create a student record
create_student_record() {
    local attempts=0
    while true; do
        # Prompt user for student details
        read -p "Enter student email: " email

        # Validate email format
        if validate_email_format "$email"; then
            break  # Email format is valid, exit loop
        else
            ((attempts++))
            if ((attempts >= 3)); then
                echo "You have exceeded the maximum number of attempts."
                echo "Example of correct email format: f.kabeya@alustudent.com"
                break
            fi
            echo "Invalid email format. Please write the email in the correct format."
        fi
    done

    # If email format is valid, proceed to collect other details and save the record
    if validate_email_format "$email"; then
        read -p "Enter student age: " age
        read -p "Enter student ID: " student_id

        # Save student record to file
        echo "$email, $age, $student_id" >> students-list_1023.txt
        # Save email to student-emails.txt
        echo "$email" >> student-emails.txt
    fi
}

# Function to save student record to file
save_student_record() {
    # Write student record to file
    echo "$1" >> students-list_1023.txt
}

# Function to view all students
view_all_students() {
    # Display contents of students-list_1023.txt
    while IFS= read -r line; do
        student_id=$(echo "$line" | cut -d ',' -f3)
        if grep -q "^$student_id," students-list_1023.txt; then
            echo "$line"
        fi
    done < students-list_1023.txt
}

# Function to delete a student record
delete_student_record() {
    # Prompt user for student ID to delete
    read -p "Enter student ID to delete: " student_id
    # Delete student record from file
    sed -i "/^$student_id,/d" students-list_1023.txt
    # Delete email from student-emails.txt
    sed -i "/^$student_id,/d" student-emails.txt
    echo "Email with student ID $student_id has been deleted."
}

# Function to update a student record
update_student_record() {
    # Prompt user for student ID to update
    read -p "Enter student ID to update: " student_id

    # Check if student ID exists in the file
    if grep -q "^$student_id," students-list_1023.txt; then
        # Prompt user for new student details
        read -p "Enter new student email: " new_email
        read -p "Enter new student age: " new_age

        # Update student record in file
        sed -i "s/^$student_id,.*/$new_email, $new_age, $student_id/" students-list_1023.txt
        # Update email in student-emails.txt
        sed -i "/^$student_id,/d" student-emails.txt
        echo "$new_email" >> student-emails.txt
        echo "Student record updated successfully."
    else
        echo "Student ID not found or deleted. Email cannot be updated."
    fi
}

# Main menu loop
while true; do
    echo "1. Create Student Record"
    echo "2. View All Students"
    echo "3. Delete Student Record"
    echo "4. Update Student Record"
    echo "5. Exit"

    read -p "Enter your choice: " choice

    case $choice in
        1) create_student_record ;;
        2) view_all_students ;;
        3) delete_student_record ;;
        4) update_student_record ;;
        5) exit ;;
        *) echo "Invalid choice. Please try again." ;;
    esac
done


